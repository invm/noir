name: Release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:


jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux
            os: ubuntu-20.04
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
          - build: macos
            os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
          - build: windows
            os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Export GitHub Actions cache environment variables
        if: matrix.build == 'windows'
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Node.js setup
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Set up Homebrew and install openssl (macos only)
        if: matrix.build == 'macos'
        uses: Homebrew/actions/setup-homebrew@master

      - if: matrix.build == 'macos'
        run: |
          brew install openssl@3
          export OPENSSL_LIB_DIR=$(which openssl)
          export OPENSSL_INCLUDE_DIR=/usr/local/opt/openssl/include

      - name: Set up openssl (windows only)
        if: matrix.build == 'windows'
        env:
            VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
        run: |
          echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
          vcpkg install openssl:x64-windows-static-md

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - run: pnpm install --frozen-lockfile

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          tagName: v__VERSION__
          releaseName: "Noir v__VERSION__"
          args: --target ${{ matrix.target }}
          releaseBody: |
            See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
